name: build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  preflight:
    runs-on: ubuntu-20.04
    steps:
      - name: Install phpcs
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: phpcs
          coverage: none

      - uses: actions/checkout@v2

      - name: Scan for PSR-12 compliance
        id: phpcs
        run: phpcs --standard=PSR12 -v $GITHUB_WORKSPACE/content/themes/**/*.php

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: ['14.x']
        php-version: ['7.4']

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use PHP ${{ matrix.node-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer

      - uses: actions/checkout@v2

      - name: Set composer auth
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get node.js cache directory
        id: node-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)" # Use $(yarn cache dir) for yarn

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.node-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Use '**/yarn.lock' for yarn
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --optimize-autoloader
          npm install

      - name: Build
        run: npm run build & npm run build:fractal
